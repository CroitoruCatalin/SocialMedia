@model SocialMedia.Models.User

@{
    ViewData["Title"] = $"{Model.FullName}";
    var likeUrl = Url.Action("Like", "PostLikes");
    var dislikeUrl = Url.Action("Dislike", "PostLikes");
    var followUrl = Url.Action("Follow", "Users");
    var unfollowUrl = Url.Action("Unfollow", "Users");
}

@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager

<div class="container">
    <div class="text-center mb-4">
        <div class="d-flex align-items-center profile-ribbon" style="background-color: rgb(33, 66, 95); padding: 10px; border-radius: 5px;">
            <div class="profile-photo">
                @if (Model.Id == UserManager.GetUserId(User))
                {
                    <form method="post" enctype="multipart/form-data" action="/Users/ChangeProfilePicture">
                        <label for="profilePictureInput" style="cursor: pointer;">
                            @if (Model.ProfilePicture != null)
                            {
                                <img src="data:@Model.ProfilePicture.ContentType;base64,@Convert.ToBase64String(Model.ProfilePicture.Data)" class="rounded-circle" width="100" height="100" alt="@Model.FullName" />
                            }
                            else
                            {
                                <img src="/assets/images/default.png" class="rounded-circle" width="100" height="100" alt="Default Profile Picture" />
                            }
                        </label>
                        <input type="file" id="profilePictureInput" name="profilePicture" style="display: none;" onchange="this.form.submit();" />
                        <input name="__RequestVerificationToken" type="hidden" value='@Html.AntiForgeryToken()' />
                    </form>
                }
                else
                {
                    @if (Model.ProfilePicture != null)
                    {
                        <img src="data:@Model.ProfilePicture.ContentType;base64,@Convert.ToBase64String(Model.ProfilePicture.Data)" class="rounded-circle" width="100" height="100" alt="@Model.FullName" />
                    }
                    else
                    {
                        <img src="/assets/images/default.png" class="rounded-circle" width="100" height="100" alt="Default Profile Picture" />
                    }
                }
            </div>


            <div class="ms-3" style="color: white;">
                <h2>@Model.FullName</h2>
            </div>
        </div>
    </div>

    <div class="mb-3">
        <a class="btn btn-primary" asp-controller="Posts" asp-action="Create">Create New Post</a>
    </div>

    <div class="mb-3">
        @if (Model.Id != @UserManager.GetUserId(User))
        {
            if (Model.Followers.Any(f => f.UserId == @UserManager.GetUserId(User)))
            {
                <button type="button" class="btn btn-danger" data-user-id="@Model.Id" onclick="unfollowUser('@Model.Id', '@unfollowUrl')">Unfollow</button>
            }
            else
            {
                <button type="button" class="btn btn-success" data-user-id="@Model.Id" onclick="followUser('@Model.Id', '@followUrl')">Follow</button>
            }
        }
    </div>

    <div class="mb-3">
        <a class="btn btn-info" asp-controller="Users" asp-action="Followers" asp-route-id="@Model.Id">
            Followers (<span id="followers-count">@Model.Followers.Count</span>)
        </a>
    </div>

    @if (Model.Posts != null && Model.Posts.Any())
    {
        @foreach (var post in Model.Posts.OrderByDescending(p => p.CreationDate))
        {
            <partial name="_Post" model="post" />
        }
    }
</div>

@section Scripts {
    <script src="~/js/PostLikeDislike.js"></script>
    <script src="~/js/UserInterraction.js"></script>
}
